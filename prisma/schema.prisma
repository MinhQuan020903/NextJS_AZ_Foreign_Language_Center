generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id               Int               @id @default(autoincrement())
  name             String
  email            String            @unique
  password         String
  role             String?           @default("user")
  avatar           String?           @default("https://i0.wp.com/www.repol.copl.ulaval.ca/wp-content/uploads/2019/01/default-user-icon.jpg?ssl=1")
  address          String?           @default("VietNam")
  birthDay         DateTime?
  indexSalary      Int?
  level            Int?
  assignment_users Assignment_User[]
}

model IndexSalary {
  id    Int @id @default(autoincrement())
  value Int
}


//Module 
//(IELTS, TOEIC)
model Module {
  id    Int    @id @default(autoincrement())
  name  String
}

//Band (Tương ứng với khóa học)
//IETLS 5.0, IETLS 6.0, IETLS 7.0, IETLS 8.0
//TOEIC 500, TOEIC 600, TOEIC 700, TOEIC 800
model BandScore {
  id    Int    @id @default(autoincrement())
  moduleId Int
  name  String
  @@index([moduleId])
}
model Course {
  id            Int            @id @default(autoincrement())
  moduleId     Int
  BandScoreId      Int
  name         String
  totalSession  Int            @default(0)
  startTime     DateTime
  endTime       DateTime
  totalAttendance        Int            @default(0)
  tuitionFee          Int
  totalCost          Int
  recommendCourseId Int
  classSessions ClassSession[]
  @@index([moduleId])
  @@index([BandScoreId])
}

model ClassSession {
  id                       Int                       @id @default(autoincrement())
  courseId                 Int
  teacherId                Int
  roomId                   Int
  StartTime                DateTime
  classShiftId             Int
  Course                   Course                    @relation(fields: [courseId], references: [id])
  classShift               ClassShift                @relation(fields: [classShiftId], references: [id])
  Assignment_ClassSessions Assignment_ClassSession[]
  @@index([courseId])
  @@index([classShiftId])
}

model TimeShift {
  id          Int          @id @default(autoincrement())
  time        String
  classShifts ClassShift[]
}

model ClassShift {
  id            Int            @id @default(autoincrement())
  roomId        Int?
  timeId        Int
  time          TimeShift      @relation(fields: [timeId], references: [id])
  classsessions ClassSession[]
  Room          Room?          @relation(fields: [roomId], references: [id])
}

model Room {
  id          Int          @id @default(autoincrement())
  name        String
  status      String?      @default("Free")
  typeId      Int
  note        String?
  attendance  Int
  capacity    Int
  floor       Int
  toilet      Int
  classShifts ClassShift[]
  type        RoomType     @relation(fields: [typeId], references: [id])
  facility    Facility?

  @@index([typeId])
}

model RoomType {
  id    Int    @id @default(autoincrement())
  name  String
  rooms Room[]
}

model Facility {
  id            Int    @id @default(autoincrement())
  name          String
  roomId        Int    @unique
  broom         Int
  ceilingFan    Int
  chair         Int
  table         Int
  waterPurifier Int
  room          Room   @relation(fields: [roomId], references: [id])

  @@index([roomId])
}

model Assignment {
  id                       Int                       @id @default(autoincrement())
  name                     String
  type                     String
  level                    String
  startTime                DateTime
  files                    String?                   @db.LongText
  Assignment_ClassSessions Assignment_ClassSession[]
  Assignment_Users         Assignment_User[]
}

model Assignment_ClassSession {
  id             Int          @id @default(autoincrement())
  classSessionId Int
  assignmentId   Int
  classSession   ClassSession @relation(fields: [classSessionId], references: [id])
  assignment     Assignment   @relation(fields: [assignmentId], references: [id])

  @@index([assignmentId])
  @@index([classSessionId])
}

model Assignment_User {
  id           Int        @id @default(autoincrement())
  userId       Int
  assignmentId Int
  user         User       @relation(fields: [userId], references: [id])
  assignment   Assignment @relation(fields: [assignmentId], references: [id])

  @@index([assignmentId])
  @@index([userId])
}
